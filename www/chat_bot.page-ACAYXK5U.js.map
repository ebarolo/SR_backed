{"version":3,"sources":["src/app/components/ricetta/ricetta.component.ts","src/app/components/ricetta/ricetta.component.html","node_modules/rxjs/dist/esm/internal/observable/dom/WebSocketSubject.js","node_modules/rxjs/dist/esm/internal/observable/dom/webSocket.js","src/app/services/web_socket.service.ts","src/app/pages/chat_bot/chat_bot.page.ts","src/app/pages/chat_bot/chat_bot.page.html"],"sourcesContent":["import { Component, OnInit , Input} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonCardTitle,IonText,IonChip,IonItem,IonList,IonCard, IonCardContent,IonCardHeader, IonCardSubtitle,IonLabel,IonCol,IonRow,IonGrid,IonListHeader,IonButtons,IonBackButton,IonContent, IonHeader, IonTitle, IonToolbar } from '@ionic/angular/standalone';\n\nimport { PlyrPlayerComponent } from '../../components/plyr-player/plyr-player.component';\n\n@Component({\n  selector: 'app-ricetta',\n  templateUrl: './ricetta.component.html',\n  styleUrls: ['./ricetta.component.scss'],\n  standalone: true,\n  imports: [PlyrPlayerComponent, IonCardTitle, IonText, IonChip, IonItem, IonList, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonLabel, IonCol, IonRow, IonGrid, IonListHeader, IonButtons, IonBackButton, IonContent, IonHeader, IonTitle, IonToolbar, CommonModule]\n})\nexport class RicettaComponent  implements OnInit {\n  @Input() recipe: any;\n\n  public videoUrl: string = '';\n\n  constructor() {}\n\n  ngOnInit() {\n    \n  }\n\n\n}\n","<ion-grid>\n  <ion-row>\n    <ion-col>\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>{{recipe.metadata.titolo}}</ion-card-title>\n      </ion-card-header>\n        <ion-card-content>\n          <ion-list>\n            <ion-list-header>\n              <ion-label><h2>Ingredienti</h2></ion-label>\n            </ion-list-header>\n            <ion-item *ngFor=\"let ingrediente of recipe.metadata.ingredienti\">\n              <ion-label>{{ingrediente}}</ion-label>\n            </ion-item>\n            <ion-list-header>\n              <ion-chip>preparazione: {{recipe.metadata.tempo_di_preparazione}}</ion-chip> <ion-chip>cottura: {{recipe.tempo_cottura}}</ion-chip>\n            </ion-list-header>\n            <ion-list-header>\n              <ion-label><h2>Preparazione</h2></ion-label>\n            </ion-list-header>\n            <ion-item *ngFor=\"let step of recipe.metadata.preparazione\">\n              <ion-label>{{step}}</ion-label>\n            </ion-item>\n          </ion-list>\n        </ion-card-content>\n      </ion-card>\n    </ion-col>\n  </ion-row>\n  <ion-row>\n    <ion-col>\n      <app-plyr-player [videoSrc]=\"videoUrl\"></app-plyr-player>\n    </ion-col>\n  </ion-row>\n  <ion-row>\n    <ion-col>\n      <ion-text>\n        <h2>CONSIGLI DELLO CHEF</h2>\n      </ion-text>\n      <ion-text>\n      {{recipe.metadata.consigli_dello_chef}}\n    </ion-text>\n    </ion-col>\n  </ion-row>\n</ion-grid>","import { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { ReplaySubject } from '../../ReplaySubject';\nconst DEFAULT_WEBSOCKET_CONFIG = {\n  url: '',\n  deserializer: e => JSON.parse(e.data),\n  serializer: value => JSON.stringify(value)\n};\nconst WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT = 'WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }';\nexport class WebSocketSubject extends AnonymousSubject {\n  constructor(urlConfigOrSource, destination) {\n    super();\n    this._socket = null;\n    if (urlConfigOrSource instanceof Observable) {\n      this.destination = destination;\n      this.source = urlConfigOrSource;\n    } else {\n      const config = this._config = Object.assign({}, DEFAULT_WEBSOCKET_CONFIG);\n      this._output = new Subject();\n      if (typeof urlConfigOrSource === 'string') {\n        config.url = urlConfigOrSource;\n      } else {\n        for (const key in urlConfigOrSource) {\n          if (urlConfigOrSource.hasOwnProperty(key)) {\n            config[key] = urlConfigOrSource[key];\n          }\n        }\n      }\n      if (!config.WebSocketCtor && WebSocket) {\n        config.WebSocketCtor = WebSocket;\n      } else if (!config.WebSocketCtor) {\n        throw new Error('no WebSocket constructor can be found');\n      }\n      this.destination = new ReplaySubject();\n    }\n  }\n  lift(operator) {\n    const sock = new WebSocketSubject(this._config, this.destination);\n    sock.operator = operator;\n    sock.source = this;\n    return sock;\n  }\n  _resetState() {\n    this._socket = null;\n    if (!this.source) {\n      this.destination = new ReplaySubject();\n    }\n    this._output = new Subject();\n  }\n  multiplex(subMsg, unsubMsg, messageFilter) {\n    const self = this;\n    return new Observable(observer => {\n      try {\n        self.next(subMsg());\n      } catch (err) {\n        observer.error(err);\n      }\n      const subscription = self.subscribe({\n        next: x => {\n          try {\n            if (messageFilter(x)) {\n              observer.next(x);\n            }\n          } catch (err) {\n            observer.error(err);\n          }\n        },\n        error: err => observer.error(err),\n        complete: () => observer.complete()\n      });\n      return () => {\n        try {\n          self.next(unsubMsg());\n        } catch (err) {\n          observer.error(err);\n        }\n        subscription.unsubscribe();\n      };\n    });\n  }\n  _connectSocket() {\n    const {\n      WebSocketCtor,\n      protocol,\n      url,\n      binaryType\n    } = this._config;\n    const observer = this._output;\n    let socket = null;\n    try {\n      socket = protocol ? new WebSocketCtor(url, protocol) : new WebSocketCtor(url);\n      this._socket = socket;\n      if (binaryType) {\n        this._socket.binaryType = binaryType;\n      }\n    } catch (e) {\n      observer.error(e);\n      return;\n    }\n    const subscription = new Subscription(() => {\n      this._socket = null;\n      if (socket && socket.readyState === 1) {\n        socket.close();\n      }\n    });\n    socket.onopen = evt => {\n      const {\n        _socket\n      } = this;\n      if (!_socket) {\n        socket.close();\n        this._resetState();\n        return;\n      }\n      const {\n        openObserver\n      } = this._config;\n      if (openObserver) {\n        openObserver.next(evt);\n      }\n      const queue = this.destination;\n      this.destination = Subscriber.create(x => {\n        if (socket.readyState === 1) {\n          try {\n            const {\n              serializer\n            } = this._config;\n            socket.send(serializer(x));\n          } catch (e) {\n            this.destination.error(e);\n          }\n        }\n      }, err => {\n        const {\n          closingObserver\n        } = this._config;\n        if (closingObserver) {\n          closingObserver.next(undefined);\n        }\n        if (err && err.code) {\n          socket.close(err.code, err.reason);\n        } else {\n          observer.error(new TypeError(WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT));\n        }\n        this._resetState();\n      }, () => {\n        const {\n          closingObserver\n        } = this._config;\n        if (closingObserver) {\n          closingObserver.next(undefined);\n        }\n        socket.close();\n        this._resetState();\n      });\n      if (queue && queue instanceof ReplaySubject) {\n        subscription.add(queue.subscribe(this.destination));\n      }\n    };\n    socket.onerror = e => {\n      this._resetState();\n      observer.error(e);\n    };\n    socket.onclose = e => {\n      if (socket === this._socket) {\n        this._resetState();\n      }\n      const {\n        closeObserver\n      } = this._config;\n      if (closeObserver) {\n        closeObserver.next(e);\n      }\n      if (e.wasClean) {\n        observer.complete();\n      } else {\n        observer.error(e);\n      }\n    };\n    socket.onmessage = e => {\n      try {\n        const {\n          deserializer\n        } = this._config;\n        observer.next(deserializer(e));\n      } catch (err) {\n        observer.error(err);\n      }\n    };\n  }\n  _subscribe(subscriber) {\n    const {\n      source\n    } = this;\n    if (source) {\n      return source.subscribe(subscriber);\n    }\n    if (!this._socket) {\n      this._connectSocket();\n    }\n    this._output.subscribe(subscriber);\n    subscriber.add(() => {\n      const {\n        _socket\n      } = this;\n      if (this._output.observers.length === 0) {\n        if (_socket && (_socket.readyState === 1 || _socket.readyState === 0)) {\n          _socket.close();\n        }\n        this._resetState();\n      }\n    });\n    return subscriber;\n  }\n  unsubscribe() {\n    const {\n      _socket\n    } = this;\n    if (_socket && (_socket.readyState === 1 || _socket.readyState === 0)) {\n      _socket.close();\n    }\n    this._resetState();\n    super.unsubscribe();\n  }\n}\n","import { WebSocketSubject } from './WebSocketSubject';\nexport function webSocket(urlConfigOrSource) {\n  return new WebSocketSubject(urlConfigOrSource);\n}\n","import { Injectable } from '@angular/core';\nimport { WebSocketSubject, webSocket } from 'rxjs/webSocket';\nimport { Observable } from 'rxjs';\n\nexport interface Message {\n  text: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class WebSocketService {\n  private socket$: WebSocketSubject<any>;\n\n  constructor() {\n     this.socket$ = webSocket('ws://localhost:1865/ws');\n   }\n \n   // Send a message to the server\n   sendMessage(message: any) {\n     this.socket$.next(message);\n   }\n \n   // Receive messages from the server\n   getMessages(): Observable<any> {\n     return this.socket$.asObservable();\n   }\n \n   // Close the WebSocket connection\n   closeConnection() {\n     this.socket$.complete();\n   }\n}\n","import { FormsModule } from '@angular/forms';\nimport {IonIcon,IonFab,IonFabList,IonFabButton,IonText,IonFooter,IonList,IonButton,IonCol,IonGrid,IonRow, IonItem, IonContent, IonHeader, IonTitle, IonToolbar, IonInput } from '@ionic/angular/standalone';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common'; // Assicurati di importare CommonModule\nimport { WebSocketService } from '../../services/web_socket.service';\nimport { Subscription } from 'rxjs';\nimport { addIcons } from 'ionicons';\nimport { chevronUpCircle, document } from 'ionicons/icons';\nimport {RicettaComponent} from '../../components/ricetta/ricetta.component';\n\n@Component({\n  selector: 'app-chat_bot',\n  templateUrl: './chat_bot.page.html',\n  styleUrls: ['./chat_bot.page.scss'],\n  standalone: true,\n  imports: [ IonIcon, IonFabList, IonFab, IonFabButton, RicettaComponent, IonText, IonFooter, IonList, IonButton, IonItem, IonCol, IonGrid, IonRow, IonContent, IonHeader, IonTitle, IonToolbar, CommonModule, FormsModule, IonInput]\n})\nexport class ChatBotPage implements OnInit {\n  public messaggio: string = \"\"\n  public responses: any[] = [];\n  public objRecipe:any = {};\n  public showRecipe = false\n  public chatStatus:string = \"\"\n  private messageSubscription: Subscription = new Subscription;\n\n  constructor(private webSocketService: WebSocketService) {\n    addIcons({ chevronUpCircle, document });\n  }\n\n  ngOnInit() {\n\n  }\n\n  ionViewWillEnter(){\n    // Subscribe to messages from the WebSocket\n    this.messageSubscription = this.webSocketService.getMessages().subscribe(\n      (message:any) => {\n        this.chatStatus = \"\"\n        console.log(message)\n        if(message.type == \"chat\"){\n          console.log( message.content)\n          if (message?.why?.memory !== undefined) {\n          message.response = message.content.split('**')[0];\n          console.log(\"***memoria dichiarativa***\")\n          console.log(message.why.memory.declarative)\n          }else{\n            console.log(\"*** nessuna memoria solo llm ***\")\n\n            message.response = message.content\n          }\n         this.responses.push(message);\n        }\n      }, (erorr:any)=> {\n        this.chatStatus = \"NON DISPONIBILE\"\n        console.info(\"error web soket\", erorr)\n      }\n    );\n  }\n\n  openRecipe(recipe:any){\n    console.log(\"openRecipe\", recipe.why.memory.declarative[0])\n    if(recipe.why.memory.declarative[0].metadata?.titolo){\n      this.objRecipe = recipe.why.memory.declarative[0]\n      this.showRecipe = true\n    }\n    \n     \n  }\n\n  sendMessage() {\n    this.showRecipe = false\n    const message = { text: this.messaggio };\n    console.log(\"sendMessage \", this.messaggio)\n    this.webSocketService.sendMessage(message);\n    this.chatStatus = \"PENDING\"\n  }\n\n\n  ionViewWillLeave() {\n    // Unsubscribe from WebSocket messages and close the connection\n    this.messageSubscription.unsubscribe();\n    this.webSocketService.closeConnection();\n    this.chatStatus = \"CLOSE\"\n  }\n}","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>chat-bot {{chatStatus}}</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <ion-list>\n            <ion-item *ngFor=\"let response of responses\" (click)=\"openRecipe(response)\">\n              <ion-text>{{ response.response }}</ion-text>\n            </ion-item>\n          </ion-list>\n        </ion-col>\n        <ion-col *ngIf=\"showRecipe\">\n          <app-ricetta [recipe]=\"objRecipe\">\n          </app-ricetta>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n</ion-content>\n\n  <ion-footer>\n    <ion-grid>\n      <ion-row>\n      <ion-col size=\"1\">\n        <ion-fab vertical=\"bottom\" horizontal=\"start\">\n          <ion-fab-button>\n            <ion-icon name=\"chevron-up-circle\"></ion-icon>\n          </ion-fab-button>\n          <ion-fab-list side=\"top\">\n            <ion-fab-button>\n              <ion-icon name=\"document\"></ion-icon>\n            </ion-fab-button>\n          </ion-fab-list>\n        </ion-fab>\n      </ion-col>\n      <ion-col size=\"8\">\n        <ion-input type=\"text\" fill=\"solid\" label=\"messaggio\" labelPlacement=\"floating\" errorText=\"messaggio non valido\" [(ngModel)]=\"messaggio\" name=\"messaggio\" value=\"\">\n        </ion-input>\n      </ion-col>\n      <ion-col>\n        <ion-button expand=\"block\" size=\"medium\" (click)=\"sendMessage()\" [disabled]=\"chatStatus !== ''\">Messaggio</ion-button>\n      </ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-footer>\n\n"],"mappings":"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","names":[],"x_google_ignoreList":[2,3]}